#!/bin/sh

instance_id="i-075fac111347a46e9"
instance_type="t2.small"


# Verify and exit the script if instance_type is already at desired state
check_desire_state(){
  current_instance_type=$(aws ec2 describe-instances --instance-id $instance_id --query "Reservations[*].Instances[*].InstanceType" --output text)
  if [ "$current_instance_type" = "$instance_type" ]; then
    echo "INFO: Current and target instance types are same..."
    echo "INFO: Skipping instance type change for $instance_id.."
    exit 0;
  else
    echo "INFO: Identified change in instance type"
  fi
}


stop_instance () {
    ##Code to stop instance, notify user, wait till instance has stopped before returning
    ##First check if the instance is actually running
    instance_state=$(aws ec2 describe-instances --instance-ids $instance_id --query Reservations[*].Instances[*].State.Name --output text)
    echo "INFO: Instance state is: $instance_state"
            if [ $instance_state = "running" ]; then
                    echo "INFO: Stopping instance $instance_id"
                    aws ec2 stop-instances --instance-ids $instance_id
            fi
            i=0
            state=$instance_state
            until [ $state = "stopped" ]; do
            sleep 1s
            i=$((i+1))
            state=$(aws ec2 describe-instances --instance-ids $instance_id --query Reservations[*].Instances[*].State.Name --output text)
            printf "."
                    if [ "$i" -ge "180" ]; then
                    printf "\n"
                    echo "ERROR: Instance took too long to stop, exiting"
                    exit 1
                    fi
            done
            printf "\n"
            echo "INFO: Instance successfully stopped after $i seconds"
    }
    change_instance_type () {
           ##Code to change the instance type, notify user, return
           instance_state=$(aws ec2 describe-instances --instance-ids $instance_id --query Reservations[*].Instances[*].State.Name --output text)
                   if [ $instance_state == "stopped" ]; then
                           echo "INFO: Changing $instance_id to $instance_type"
                           aws ec2 modify-instance-attribute --instance-id $instance_id --instance-type "{\"Value\": \"$instance_type\"}"
                   else
                           echo "ERROR: Instance state is: $instance_state"
                           echo "ERROR: Cannot change instance type in this state, exiting" 1>&2
                   exit 1
                   fi
   }
  ## Start Ec2 instance
    start_instance () {
              ##Code to start instance, notify user, wait till instance is running before returning
              echo "INFO: Starting instance $instance_id"
              aws ec2 start-instances --instance-ids $instance_id
              i=0
              state=$(aws ec2 describe-instances --instance-ids $instance_id --query Reservations[*].Instances[*].State.Name --output text)
              until [ $state = "running" ]; do
                      sleep 1s
                      i=$((i+1))
                      printf "."
                      if [ "$i" -ge "180" ]; then
                              echo "ERROR: Instance took too long to start, exiting"
                              exit 1
                      fi
                      state=$(aws ec2 describe-instances --instance-ids $instance_id --query Reservations[*].Instances[*].State.Name --output text)
              done
              new_instance_type=$(aws ec2 describe-instance-attribute --instance-id $instance_id --attribute instanceType)
              printf "\n"
              echo "INSTANCEID $new_instance_type"
              echo "INFO: Instance started in $i seconds"
              echo "INFO: Completed."
      }


## Main
check_desire_state
stop_instance
change_instance_type
start_instance
